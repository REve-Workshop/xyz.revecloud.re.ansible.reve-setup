- name: Include common variables
  include_vars:
    file: ../../common/vars/main.yml
- name: "Create user home for {{ user_data.name }}"
  block:
    - name: Create user
      user:
        name: "{{ user_data.name }}"
        comment: "{{ user_data.comment | default('User populated by Ansible playbook users-setup') }}"
        create_home: True
        password: "{{ user_data.password | default('!') | password_hash('sha512') }}"
        shell: "{{ user_data.shell | default('/bin/bash') }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        system: "{{ user_data.system | default(False) }}"
        state: present
    - name: Create user directories
      block:
        - name: Create desktop user directories
          file:
            path: "{{ user_home }}/{{ item.value }}"
            state: directory
            owner: "{{ user_data.name }}"
            group: "{{ user_data.name }}"
          loop: "{{ xdg|dict2items }}"
        - name: Create extra user directories
          file:
            path: "{{ user_home }}/{{ item }}"
            state: directory
            owner: "{{ user_data.name }}"
            group: "{{ user_data.name }}"
          loop: "{{ extra }}"
      # become: True
      # become_user: "{{ user_data.name }}"
  when: user_data.state == "create" or user_data.state == "all"
- name: Setup XDG environment
  block:
    - name: Create XDG configuration directory
      file:
        path: "{{ xdg_config_home }}"
        state: directory
        owner: "{{ user_data.name }}"
        group: "{{ user_data.name }}"
    - name: Deploy XDG configuration file
      template:
        src: user-dirs.dirs.j2
        dest: "{{ user_home }}/.config/user-dirs.dirs"
        owner: "{{ user_data.name }}"
        group: "{{ user_data.name }}"
    - name: Create repositories directory in XDG local directory
      file:
        path: "{{ root_config_repo }}"
        state: directory
        owner: "{{ user_data.name }}"
        group: "{{ user_data.name }}"
  # become: True
  # become_user: "{{ user_data.name }}"
  when: user_data.state == "config" or user_data.state == "all"
